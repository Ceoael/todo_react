{"version":3,"sources":["shared/components/Modal/Modal.module.css","components/TodoTasks/TodoFilter/TodoFilter.module.css","components/EditTask/EditTask.module.css","components/ToDoAppWrapper/ToDoAppWrapper.module.css","shared/components/Backdrop/Backdrop.module.css","components/TodoTasks/TodoTask/TodoTask.module.css","components/TodoInput/TodoInput.js","components/TodoTasks/TodoFilter/TodoFilter.js","components/TodoTasks/TodoTask/TodoTask.js","components/TodoTasks/TodoTasks.js","shared/components/Backdrop/Backdrop.js","shared/components/Modal/Modal.js","components/EditTask/EditTask.js","components/ToDoAppWrapper/ToDoAppWrapper.js","containers/TodoAppBuilder/TodoAppBuilder.js","App.js","reportWebVitals.js","index.js","components/TodoInput/TodoInput.module.css","components/TodoTasks/TodoTasks.module.css"],"names":["module","exports","TodoInput","addNewTaskToList","useState","inputValue","setInputValue","buttonAttachedClasses","classes","TodoInput__button","length","onClickHandler","e","preventDefault","trim","onSubmit","className","TodoInput__input","value","onChange","target","type","placeholder","onClick","join","TodoFilter","setFilterBy","activeButton","currentActiveButton","clickHandler","name","TodoFilter__description","map","buttonName","attachClasses","TodoFilter__button","push","TodoTask","ref","taskDescription","status","taskListDoneHandler","id","taskListDeleteHandler","addedDate","finishedDate","turnOnModalHandler","attachClassesToDescription","TodoTask__description","TodoTask__Content","TodoTask__Button","TodoTask__Date","TodoTasks","taskList","TransitionGroup","component","task","taskRef","createRef","CSSTransition","nodeRef","classNames","enter","enterActive","exit","exitActive","timeout","description","Backdrop","show","clicked","Modal","background","modalOpen","modalName","modalOFF","children","style","opacity","transform","Modal__header","Modal__closeButton","Modal__X","Modal__contentWrapper","EditTask","turnOffModalHandler","taskId","currentTaskDescription","changeTaskDescription","isFormValid","setIsFormValid","useEffect","undefined","Fragment","EditTask__textarea","SubmitButton","disabled","ToDoAppWrapper","props","TodoApp__Background","TodoApp__Wrapper","TodoAppBuilder","filterBy","setTaskList","showEditModal","setShowEditModal","taskIdForEditModal","setTaskIdForEditModal","getCurrentTime","date","Date","hour","getHours","minutes","getMinutes","toLocaleDateString","JSON","parse","localStorage","getItem","setItem","stringify","filter","newDescription","updatedTaskList","newTask","uuidv4","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f6dddf3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1T4ng\",\"Modal__header\":\"Modal_Modal__header__3z7Aw\",\"Modal__closeButton\":\"Modal_Modal__closeButton__1WxSv\",\"Modal__X\":\"Modal_Modal__X__XJOus\",\"Modal__contentWrapper\":\"Modal_Modal__contentWrapper__2-i_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoFilter\":\"TodoFilter_TodoFilter__2xQ-G\",\"TodoFilter__description\":\"TodoFilter_TodoFilter__description__2b5A4\",\"TodoFilter__button\":\"TodoFilter_TodoFilter__button__C1Ay9\",\"TodoFilter__button--active\":\"TodoFilter_TodoFilter__button--active__1JVUi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditTask\":\"EditTask_EditTask__3yub3\",\"EditTask__textarea\":\"EditTask_EditTask__textarea__3rg8f\",\"SubmitButton\":\"EditTask_SubmitButton__Jkauz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoApp__Background\":\"ToDoAppWrapper_TodoApp__Background__2PMDD\",\"TodoApp__Wrapper\":\"ToDoAppWrapper_TodoApp__Wrapper__3JfRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3bnRo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoTask\":\"TodoTask_TodoTask__Gg_td\",\"TodoTask__Content\":\"TodoTask_TodoTask__Content__2piR8\",\"TodoTask__description\":\"TodoTask_TodoTask__description__1JP8J\",\"TodoTask__Date\":\"TodoTask_TodoTask__Date__2xnKk\",\"TodoTask__description--done\":\"TodoTask_TodoTask__description--done__30aH7\",\"TodoTask__Button\":\"TodoTask_TodoTask__Button__1zZvK\",\"TodoTask__Button--done\":\"TodoTask_TodoTask__Button--done__2q2Id\",\"TodoTask__Button--delete\":\"TodoTask_TodoTask__Button--delete__3cJ3C\"};","import React, {useState} from 'react';\r\n\r\nimport classes from './TodoInput.module.css';\r\n\r\nconst TodoInput = ({addNewTaskToList}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    let buttonAttachedClasses = [classes.TodoInput__button];\r\n    \r\n    if (!inputValue.length) {\r\n        buttonAttachedClasses = [classes.TodoInput__button, classes['TodoInput__button--disable']]\r\n    }\r\n    \r\n    const onClickHandler = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim()) {\r\n            addNewTaskToList(inputValue);\r\n        };\r\n        \r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onClickHandler} className={classes.TodoInput}>\r\n            <input \r\n                className={classes.TodoInput__input} \r\n                value={inputValue} \r\n                onChange={e => setInputValue(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"I have to do...\"/>\r\n            <button \r\n                onClick={onClickHandler} \r\n                type=\"submit\" \r\n                className={buttonAttachedClasses.join(' ')}>Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoInput;","import React, {useState} from 'react';\r\n\r\nimport classes from './TodoFilter.module.css';\r\n\r\nconst TodoFilter = ({setFilterBy}) => {\r\n    const buttonNames = ['all', 'done', 'undone'];\r\n    const [activeButton, currentActiveButton] = useState('all');\r\n\r\n    const clickHandler = (e) => {\r\n        currentActiveButton(e.target.name);\r\n\r\n        setFilterBy(e.target.name);\r\n    };\r\n \r\n    return (\r\n        <div className={classes.TodoFilter}>\r\n            <p className={classes.TodoFilter__description}>Show: </p>\r\n            {buttonNames.map((buttonName) => {\r\n                let attachClasses = [classes.TodoFilter__button];\r\n\r\n                if (buttonName === activeButton) {\r\n                    attachClasses.push(classes['TodoFilter__button--active']);\r\n                }\r\n\r\n                return <button \r\n                    key={buttonName} \r\n                    name={buttonName}\r\n                    onClick={clickHandler}\r\n                    className={attachClasses.join(' ')}>{buttonName}</button>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoFilter;","import React from 'react';\r\n\r\nimport classes from './TodoTask.module.css';\r\n\r\nconst TodoTask = ({\r\n        taskDescription, \r\n        status, \r\n        taskListDoneHandler,\r\n        id, taskListDeleteHandler, \r\n        addedDate, \r\n        finishedDate,\r\n        turnOnModalHandler}, ref) => {\r\n    let attachClassesToDescription = [classes.TodoTask__description];\r\n\r\n    if (status === 'done') {\r\n        attachClassesToDescription = [classes.TodoTask__description, \r\n                                        classes['TodoTask__description--done']];\r\n    }\r\n\r\n    return (\r\n        <div className={classes.TodoTask}>\r\n            <div className={classes.TodoTask__Content}>\r\n                <p \r\n                    className={attachClassesToDescription.join(' ')}\r\n                    onClick={() => status !== 'done' ? turnOnModalHandler(id) : null}>{taskDescription}</p>\r\n                <button \r\n                    onClick={() => taskListDoneHandler(id)} \r\n                    className={[classes.TodoTask__Button, classes['TodoTask__Button--done']].join(' ')}>✓</button>\r\n                <button \r\n                    onClick={() => taskListDeleteHandler(id)}\r\n                    className={[classes.TodoTask__Button, classes['TodoTask__Button--delete']].join(' ')}>X</button>\r\n            </div>\r\n            <div className={classes.TodoTask__Date}>\r\n                <p>{addedDate}</p>\r\n                <p>{finishedDate}</p>\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default TodoTask;","import React, { createRef } from 'react';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\nimport TodoFilter from './TodoFilter/TodoFilter';\r\nimport TodoTask from './TodoTask/TodoTask';\r\n\r\nimport classes from './TodoTasks.module.css';\r\n\r\nconst TodoTasks = ({\r\n        setFilterBy, \r\n        taskList, \r\n        taskListDoneHandler, \r\n        taskListDeleteHandler,\r\n        turnOnModalHandler}) => {\r\n\r\n    \r\n    return (\r\n        <div className={classes.TodoTasks}>\r\n            <TodoFilter setFilterBy={setFilterBy}/>\r\n\r\n            <TransitionGroup\r\n                component={null} \r\n            >\r\n                { taskList.map((task)=>{\r\n                const taskRef = createRef(null);\r\n                return (<CSSTransition\r\n                    nodeRef={taskRef}\r\n                    classNames= {{\r\n                        enter: classes['TodoTasks__Task--enter'],\r\n                        enterActive: classes['TodoTasks__Task--enterActive'],\r\n                        exit: classes['TodoTasks__Task--exit'],\r\n                        exitActive: classes['TodoTasks__Task--exitActive']\r\n                    }}\r\n                    key={task.id}\r\n                    timeout={300}>\r\n                        <div ref={taskRef}>\r\n                        <TodoTask\r\n                            turnOnModalHandler={turnOnModalHandler}\r\n                            taskListDoneHandler={taskListDoneHandler}\r\n                            taskListDeleteHandler={taskListDeleteHandler}\r\n                            key={task.id} \r\n                            id={task.id} \r\n                            status={task.status} \r\n                            taskDescription={task.description}\r\n                            addedDate={task.addedDate}\r\n                            finishedDate={task.finishedDate}/>\r\n                        </div>\r\n                    </CSSTransition>\r\n                )\r\n        })}\r\n            </TransitionGroup>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoTasks;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst Backdrop = ({show, clicked}) => {\r\n    return (\r\n        show ? <div \r\n            className={classes.Backdrop}\r\n            onClick={clicked}></div> \r\n            : null\r\n    )\r\n}\r\n\r\nexport default Backdrop;","import React from \"react\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Modal = ({background, modalOpen, modalName, modalOFF, children}) => {\r\n\r\n  // Props:\r\n  //  modalOpen, modalName, modalOFF\r\n    \r\n  return (\r\n    <div\r\n        className={classes.Modal}\r\n        style={{\r\n            background: background,\r\n            opacity: modalOpen ? 1 : 0,\r\n            transform: modalOpen ? \r\n            'translate(-50%, -50%)' : 'translate(-50%, -200vh)'}}>\r\n            \r\n        <div className={classes.Modal__header}>\r\n            <p>{modalName}</p>\r\n            <div\r\n                className={classes.Modal__closeButton}\r\n                onClick={modalOFF}>\r\n                    <div className={classes.Modal__X}></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={classes.Modal__contentWrapper}>\r\n            {children}\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;","import React, {useState, useEffect} from 'react';\r\n\r\nimport Backdrop from '../../shared/components/Backdrop/Backdrop';\r\nimport Modal from '../../shared/components/Modal/Modal';\r\n\r\nimport classes from './EditTask.module.css';\r\n\r\nconst EditTask = ({\r\n        show, \r\n        turnOffModalHandler,\r\n        taskId,\r\n        currentTaskDescription,\r\n        changeTaskDescription}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setInputValue(currentTaskDescription(taskId));\r\n    }, [taskId]);\r\n\r\n    useEffect(() => {\r\n        if (inputValue !== undefined && (inputValue.trim() === '' || inputValue === '\\n' || inputValue === '\\r')) {\r\n            setIsFormValid(false);\r\n        } \r\n        else {\r\n            setIsFormValid(true);\r\n        }\r\n    }, [inputValue])\r\n\r\n    const changeTask = () => {\r\n        changeTaskDescription(taskId, inputValue.trim());\r\n        setIsFormValid(false);\r\n        turnOffModalHandler();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop show={show} clicked={turnOffModalHandler}/>\r\n                \r\n            <Modal\r\n                modalOFF={turnOffModalHandler} \r\n                modalOpen={show}\r\n                modalName={'Edit task'}\r\n                background={'linear-gradient(to right, #185a9d, #43cea2)'}>\r\n\r\n                <form   \r\n                    className={classes.EditTask}\r\n                    onSubmit={() => changeTask()}\r\n                >\r\n                    <textarea \r\n                        className={classes.EditTask__textarea}\r\n                        value={inputValue}\r\n                        onChange={(e) => setInputValue(e.target.value)}/>           \r\n                    <button\r\n                        className={classes.SubmitButton}\r\n                        type=\"submit\"\r\n                        disabled={!isFormValid}\r\n                    >OK</button>\r\n                </form>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default EditTask;","import React from 'react';\r\n\r\nimport classes from './ToDoAppWrapper.module.css';\r\n\r\nconst ToDoAppWrapper = (props) => {\r\n    return (\r\n        <div className={classes.TodoApp__Background}>\r\n            <div className={classes.TodoApp__Wrapper}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoAppWrapper;\r\n","import React, {useState, useEffect}  from 'react';\r\nimport {v4 as uuidv4 } from 'uuid';\r\n\r\nimport TodoInput from '../../components/TodoInput/TodoInput';\r\nimport TodoTasks from '../../components/TodoTasks/TodoTasks';\r\nimport EditTask from '../../components/EditTask/EditTask';\r\nimport ToDoAppWrapper from './../../components/ToDoAppWrapper/ToDoAppWrapper';\r\n\r\nconst TodoAppBuilder = () => {\r\n    const [filterBy, setFilterBy] = useState('all');\r\n\r\n    const [taskList, setTaskList] = useState([]);\r\n\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n\r\n    const [taskIdForEditModal, setTaskIdForEditModal] = useState(null);\r\n\r\n    const getTaskDescription = (id) => {\r\n        if (id === null) return;\r\n        const searchedTask = taskList.filter( task => task.id === id)[0];\r\n        \r\n        return searchedTask.description;\r\n    }\r\n\r\n    const changeTaskDescription = (id, newDescription) => {\r\n        const updatedTaskList = taskList.map( task => {\r\n            if ( task.id === id) {\r\n                task.description = newDescription;\r\n                task.addedDate = getCurrentTime();\r\n            }\r\n\r\n            return task;\r\n        })\r\n\r\n        setTaskList(updatedTaskList);\r\n    }\r\n    \r\n    const turnOnModalHandler = (id) => {\r\n        setTaskIdForEditModal(id);\r\n        setShowEditModal(true);\r\n    }\r\n\r\n    const turnOffModalHandler = () => {\r\n        setTaskIdForEditModal(null);\r\n        setShowEditModal(false);\r\n    }\r\n    \r\n    const getCurrentTime = () => {\r\n        const date = new Date();\r\n        const hour = date.getHours();\r\n        const minutes = date.getMinutes();\r\n\r\n        return `${date.toLocaleDateString()} ${hour < 10 ? '0' + hour : hour}:${minutes < 10 ? '0' + minutes : minutes}`\r\n    }\r\n\r\n    const taskListDoneHandler = (id) => {\r\n        const updatedTaskList = taskList.map((task) => {\r\n            if ( task.id === id) {\r\n                if (task.status === 'done') return {...task, status: 'undone', finishedDate: ''}\r\n                return {...task, status: 'done', finishedDate: getCurrentTime()}\r\n            }\r\n            return task;\r\n        });\r\n\r\n        setTaskList(updatedTaskList);\r\n    }  \r\n\r\n    const taskListDeleteHandler = (id) => {\r\n        const updatedTaskList = taskList.filter((task) => task.id !== id);\r\n\r\n        setTaskList(updatedTaskList);\r\n    }\r\n\r\n    const filterListHandler = () => {\r\n        return taskList.filter((task) => {\r\n            if (filterBy === 'all') return true;\r\n\r\n            return task.status === filterBy;\r\n        })\r\n    }\r\n\r\n    const addNewTaskToList = (description) => {\r\n        const newTask = {\r\n            description,\r\n            id: uuidv4(),\r\n            status: 'undone',\r\n            addedDate: getCurrentTime(),\r\n            finishedDate: ''\r\n        }\r\n\r\n        setTaskList([...taskList, newTask]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTaskList(JSON.parse(localStorage.getItem('taskList')) || []);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('taskList', JSON.stringify(taskList));\r\n    }, [taskList]);\r\n\r\n    return (\r\n        <ToDoAppWrapper>\r\n            <EditTask \r\n                show={showEditModal}\r\n                turnOffModalHandler={turnOffModalHandler}\r\n                taskId={taskIdForEditModal}\r\n                currentTaskDescription={getTaskDescription}\r\n                changeTaskDescription={changeTaskDescription}/>\r\n\r\n            <TodoInput addNewTaskToList={addNewTaskToList}/>\r\n\r\n            <TodoTasks \r\n                taskList={filterListHandler(taskList)} \r\n                turnOnModalHandler={turnOnModalHandler}\r\n                setFilterBy={setFilterBy}\r\n                taskListDoneHandler={taskListDoneHandler}\r\n                taskListDeleteHandler={taskListDeleteHandler}/>\r\n        </ToDoAppWrapper>\r\n    )\r\n}\r\n\r\nexport default TodoAppBuilder;","import TodoAppBuilder from './containers/TodoAppBuilder/TodoAppBuilder';\n\nfunction App() {\n  return (\n    <TodoAppBuilder />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoInput\":\"TodoInput_TodoInput__2fSxB\",\"TodoInput__input\":\"TodoInput_TodoInput__input__3jxWi\",\"TodoInput__button\":\"TodoInput_TodoInput__button__1_cQt\",\"TodoInput__button--disable\":\"TodoInput_TodoInput__button--disable__KkXpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoTasks\":\"TodoTasks_TodoTasks__3DJlU\",\"TodoTasks__Task--enter\":\"TodoTasks_TodoTasks__Task--enter__1eIDu\",\"TodoTasks__Task--enterActive\":\"TodoTasks_TodoTasks__Task--enterActive__MFMf2\",\"TodoTasks__Task--exit\":\"TodoTasks_TodoTasks__Task--exit__3EzSd\",\"TodoTasks__Task--exitActive\":\"TodoTasks_TodoTasks__Task--exitActive__2JRe0\"};"],"sourceRoot":""}